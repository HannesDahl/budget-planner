{"version":3,"sources":["ErrorHandler.js","Notify.js","Firebase.js","components/OtherAuth.jsx","components/HomeButton.jsx","pages/Login.jsx","UserContext.jsx","components/Loader.jsx","pages/dasboard_pages/Frontpage.jsx","utils/events.js","pages/dasboard_pages/Calendar.jsx","ConfigContext.jsx","pages/dasboard_pages/Profile.jsx","pages/Dashboard.jsx","pages/Signup.jsx","pages/ForgotPassword.jsx","components/Navbar.jsx","pages/Homepage.jsx","App.jsx","index.jsx"],"names":["ErrorHandler","error","toast","Notify","message","success","firebaseApp","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","Firebase","doCreateUserWithEmailAndPassword","username","email","password","a","auth","createUserWithEmailAndPassword","then","result","user","updateProfile","displayName","doAddDefaultSettingsToDatabase","catch","err","doSignInWithEmailAndPassword","signInWithEmailAndPassword","res","doSignInWithGoogle","signInWithPopup","googleAuthProvider","localStorage","setItem","JSON","stringify","currentUser","info","console","log","additionalUserInfo","isNewUser","database","ref","uid","set","currency","dateFormat","doUploadProfilePicture","file","metadata","customMetadata","name","storage","put","returnData","fullPath","getDownloadURL","imageURL","postPayment","type","data","firestore","collection","doc","add","doSignOut","signOut","this","authed","firebase","GoogleAuthProvider","value","update","refFromURL","photoURL","imageToDelete","delete","sendPasswordResetEmail","e","get","forEach","push","fire","OtherAuth","props","history","classes","className","otherAuthWrapper","Divider","divider","otherAuth","Button","onClick","doLoginWithGoogle","variant","size","buttonText","React","Component","withRouter","withStyles","theme","marginTop","width","display","justifyContent","alignItems","flexDirection","margin","icon","fontSize","color","marginLeft","HomeButton","state","toHome","toDashboard","to","Icon","root","position","top","left","cursor","palette","primary","main","transition","dark","Login","preventDefault","Container","component","maxWidth","CssBaseline","paper","Avatar","avatar","Typography","form","noValidate","TextField","required","fullWidth","id","label","autoComplete","autoFocus","onChange","setState","target","FormControlLabel","control","Checkbox","submit","doLoginWithEmailAndPassword","Grid","container","item","xs","Link","href","spacing","backgroundColor","UserContext","createContext","style","makeStyles","height","CircularIndeterminate","CircularProgress","Frontpage","handleDialogClose","dialogs","handleDialogOpen","index","tempArr","selectedDate","format","Date","now","handleDateChange","dateToSave","handleChange","currentTarget","customDialog","open","title","negOrPos","Dialog","onClose","aria-labelledby","aria-describedby","onSubmit","amount","Number","date","DialogTitle","DialogContent","direction","justify","dialogItem","inputProps","min","utils","DateFnsUtils","disableToolbar","inputVariant","KeyboardButtonProps","DialogActions","justify-content","addPayDisplay","payDisplayItem","redBg","greenBg","opacity","BigCalendar","events","getCalendarData","calendarData","i","length","dataObj","start","end","local","momentLocalizer","moment","localizer","startAccessor","endAccessor","ConfigContext","Profile","changeDisplayName","showChangeUsername","changeAvatar","showChangeAvatarModal","handleClose","onSelectFile","files","reader","FileReader","addEventListener","src","readAsDataURL","onImageLoaded","image","imageRef","onCropComplete","crop","makeClientCrop","onCropChange","percentCrop","saveAvatarChanges","changingPfp","doRemoveLastUsedProfilePicutre","handleCurrencyChange","context","changeCurrency","doChangeSettingsForUser","handleDateFormatChange","changeDateFormat","showAvatarEditButton","currencies","dateFormats","unit","aspect","minWidth","minHeight","getCroppedImg","createRandomString","croppedImageUrl","characters","charactersLength","charAt","Math","floor","random","fileName","canvas","document","createElement","scaleX","naturalWidth","scaleY","naturalHeight","getContext","drawImage","x","y","Promise","resolve","reject","toBlob","blob","window","URL","revokeObjectURL","fileUrl","createObjectURL","labels","datasets","borderColor","borderWidth","options","legend","Consumer","avatarDialogContent","selectAvatarLabel","htmlFor","none","accept","circularCrop","onComplete","changingPfpSpinnerWrapper","thickness","changingPfpSpinner","infoPanel","box","avatarWrapper","onMouseEnter","onMouseLeave","alt","avatarEditButton","avatarEditButtonIcon","changerWrapper","changeButton","redButton","defaultValue","changeIcon","rightPanel","side","settingsPanel","settingsText","select","config","w100","map","option","MenuItem","key","pieChart","pieChartText","chart","padding","float","accountCircle","marginBottom","maxHeight","borderRadius","croppedImagePreview","textAlign","zIndex","location","Dashboard","handleDropdown","anchorEl","handleClickAway","handleTabChange","event","tabIndex","logout","once","snapshot","val","configObj","Provider","dashboard","sidebar","namedisplay","namedropdown","Popper","Boolean","anchororigin","vertical","Paper","ClickAwayListener","onClickAway","MenuList","nameDropdownList","menuItem","Tabs","orientation","navtabs","indicator","Tab","tab","selected","content","exact","path","Calendar","contextType","flexGrow","border","menuLink","textDecoration","selectCurrency","bottom","SignUp","createAccount","ForgotPassword","doForgetPassword","input","forgotPassword","Navbar","authListener","onAuthStateChanged","navbarWrapperElement","querySelector","scrollY","classList","remove","element","getElementById","scrollIntoView","behavior","block","AppBar","Toolbar","navlink","navbarLinks","scrollTo","navbarLink","rightLink","doLogout","marginRight","Homepage","multiline","rows","rowsMax","submitButton","App","readyToRender","PrivateRoute","children","rest","render","pathname","from","NoMatch","useLocation","createMuiTheme","blue","secondary","deepPurple","status","danger","orange","ThemeProvider","closeOnClick"],"mappings":"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","file":"static/js/main.7cacda2c.chunk.js","sourcesContent":["import {\r\n    toast\r\n} from 'react-toastify';\r\n\r\nclass ErrorHandler {\r\n    constructor(error) {\r\n        toast.error(error);\r\n    }\r\n}\r\n\r\nexport default ErrorHandler;","import {toast} from 'react-toastify';\r\n\r\nclass Notify {\r\n    constructor(message) {\r\n        toast.success(message)\r\n    }\r\n}\r\n\r\nexport default Notify;","import app from 'firebase/app';\r\nimport firebase from 'firebase';\r\nimport ErrorHandler from './ErrorHandler';\r\nimport Notify from './Notify';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyD186peFKoxgtKsi2vhrs1OZKc0iQwALlU\",\r\n    authDomain: \"budget-planner-f5ee3.firebaseapp.com\",\r\n    databaseURL: \"https://budget-planner-f5ee3.firebaseio.com\",\r\n    projectId: \"budget-planner-f5ee3\",\r\n    storageBucket: \"budget-planner-f5ee3.appspot.com\",\r\n    messagingSenderId: \"541868588347\",\r\n    appId: \"1:541868588347:web:66a0aa88797504ecec0b1e\",\r\n    measurementId: \"G-04JWXTDKWW\"\r\n};\r\n\r\nconst firebaseApp = app.initializeApp(firebaseConfig);\r\napp.analytics(firebaseApp);\r\n\r\nclass Firebase {\r\n    constructor() {\r\n        this.auth = app.auth()\r\n        this.storage = app.storage()\r\n        this.database = app.database()\r\n        this.firestore = app.firestore()\r\n\r\n        this.authed = this.auth.currentUser\r\n\r\n        this.firebase = firebaseApp;\r\n\r\n        this.googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n    }\r\n\r\n    isAuthed() {\r\n        if (this.auth.currentUser) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    doCreateUserWithEmailAndPassword = async (username, email, password) => {\r\n        await this.auth.createUserWithEmailAndPassword(email, password).then(result => {\r\n            result.user.updateProfile({\r\n                displayName: username\r\n            })\r\n            this.doAddDefaultSettingsToDatabase(result)\r\n        }).catch(err => new ErrorHandler(err.message));\r\n    }\r\n\r\n    doSignInWithEmailAndPassword = async (email, password) => {\r\n        await this.auth.signInWithEmailAndPassword(email, password).then(res => {\r\n            this.doAddDefaultSettingsToDatabase(res)\r\n        }).catch(err => new ErrorHandler(err.message));\r\n    }\r\n\r\n    doSignInWithGoogle = async () => {\r\n        await this.auth.signInWithPopup(this.googleAuthProvider).then((res) => {\r\n            localStorage.setItem('user', JSON.stringify(this.auth.currentUser))\r\n            this.doAddDefaultSettingsToDatabase(res)\r\n        }).catch(err => new ErrorHandler(err.message));\r\n    }\r\n\r\n    doAddDefaultSettingsToDatabase = async (info) => {\r\n        console.log(info);\r\n        if (info.additionalUserInfo.isNewUser) {\r\n            await this.database.ref(`${this.auth.currentUser.uid}/settings`).set({\r\n                currency: 'EUR',\r\n                dateFormat: 'dd/MM/yyyy'\r\n            }).catch(err => new ErrorHandler(err.message))\r\n        }\r\n    }\r\n\r\n    doUploadProfilePicture = async (file) => {\r\n        const metadata = {\r\n            customMetadata: {\r\n                'uid': this.auth.currentUser.uid,\r\n                'name': `avatars/${file.name}`\r\n            }\r\n        }\r\n\r\n        let returnData;\r\n        const ref = this.storage.ref('avatars/' + file.name);\r\n        await ref.put(file, metadata).then(res => {\r\n            returnData = res.metadata.fullPath;\r\n        }).catch(err => new ErrorHandler(err.message));\r\n        const imageURL = await this.storage.ref(returnData).getDownloadURL();\r\n        return imageURL\r\n    }\r\n\r\n    doChangeSettingsForUser(type, value) {\r\n        const ref = this.database.ref(`${this.auth.currentUser.uid}/settings`);\r\n\r\n        switch (type) {\r\n            case 'currency': {\r\n                ref.update({\r\n                    currency: value\r\n                });\r\n                break;\r\n            }\r\n            case 'date': {\r\n                ref.update({\r\n                    dateFormat: value\r\n                });\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    postPayment = async (type, data) => {\r\n        console.log(type);\r\n        const ref = await this.firestore.collection('financial_data').doc(`${this.auth.currentUser.uid}`)\r\n\r\n        ref.collection(type).add(data)\r\n    }\r\n\r\n    async doRemoveLastUsedProfilePicutre() {\r\n        const imageToDelete = await this.storage.refFromURL(this.auth.currentUser.photoURL);\r\n        if (imageToDelete) {\r\n            await imageToDelete.delete().catch(err => new ErrorHandler(err.message))\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    async doForgetPassword(email) {\r\n        await firebase.auth().sendPasswordResetEmail(email)\r\n            .then(() => new Notify('Sent a email to ' + email))\r\n            .catch(e => new ErrorHandler(e.message))\r\n        return ''\r\n    }\r\n\r\n    doSignOut = () => this.auth.signOut()\r\n\r\n    async getCalendarData() {\r\n\r\n        const data = []\r\n\r\n        await this.firestore.collection('financial_data').doc(this.auth.currentUser.uid).collection('payments').get().then(res => {\r\n            res.forEach(doc => {\r\n                data.push(doc.data())\r\n            });\r\n        }).catch(err => new ErrorHandler(err.message))\r\n\r\n        await this.firestore.collection('financial_data').doc(this.auth.currentUser.uid).collection('subscriptions').get().then(res => {\r\n            res.forEach(doc => {\r\n                data.push(doc.data())\r\n            })\r\n        }).catch(err => new ErrorHandler(err.message))\r\n        console.log(data);\r\n        return data\r\n\r\n    }\r\n}\r\n\r\nexport default Firebase;","import React from 'react';\r\nimport { Button, Divider, withStyles } from '@material-ui/core';\r\nimport Firebase from '../Firebase';\r\nimport ErrorHandler from '../ErrorHandler';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst classes = theme => ({\r\n    otherAuthWrapper: {\r\n        marginTop: 25,\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flexDirection: 'column'\r\n    },\r\n    divider: {\r\n        width: '46%',\r\n        margin: '0 10px'\r\n    },\r\n    otherAuth: {\r\n        marginTop: 25\r\n    },\r\n    icon: {\r\n        fontSize: 42\r\n    },\r\n    buttonText: {\r\n        color: '#fff',\r\n        marginLeft: 15\r\n    }\r\n});\r\n\r\nconst fire = new Firebase();\r\n\r\nclass OtherAuth extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    async doLoginWithGoogle() {\r\n        await fire.doSignInWithGoogle()\r\n            .then(() => this.props.history.push('/dashboard'))\r\n            .catch(err => new ErrorHandler(err.message));\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div className={classes.otherAuthWrapper}>\r\n                <div className=\"other-auth-or\">\r\n                    <Divider className={classes.divider} />\r\n                    <p>OR</p>\r\n                    <Divider className={classes.divider} />\r\n                </div>\r\n                <div className={classes.otherAuth}>\r\n                    <Button onClick={() => this.doLoginWithGoogle()} className=\"other-auth-icon other-auth-icon-google\" variant=\"contained\" size=\"large\"><i className=\"fab fa-google other-auth-icon other-auth-icon-google\"></i><p className={classes.buttonText}>Log in with Google</p></Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(withStyles(classes)(OtherAuth));\r\n","import React from 'react';\r\nimport { Icon, withStyles } from '@material-ui/core';\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\n\r\nconst classes = (theme) => ({\r\n    root: {\r\n        position: 'absolute',\r\n        top: 25,\r\n        left: 25,\r\n        fontSize: '3em',\r\n        cursor: 'pointer',\r\n        color: theme.palette.primary.main,\r\n        transition: '.3s',\r\n\r\n        '&:hover': {\r\n            color: theme.palette.primary.dark\r\n        }\r\n    }\r\n});\r\n\r\nclass HomeButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            toHome: false\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        if (this.state.toDashboard === true) {\r\n            return <Redirect to='/' />\r\n        }\r\n\r\n        return (\r\n            <Icon onClick={() => this.props.history.push('/')} className={classes.root}>home</Icon>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(withStyles(classes)(HomeButton));","import React from 'react';\r\nimport {\r\n    Avatar,\r\n    Button,\r\n    CssBaseline,\r\n    TextField,\r\n    FormControlLabel,\r\n    Checkbox,\r\n    Link,\r\n    Grid,\r\n    Typography,\r\n    Container\r\n} from '@material-ui/core';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport OtherAuth from '../components/OtherAuth';\r\nimport Firebase from '../Firebase';\r\nimport HomeButton from '../components/HomeButton';\r\nimport ErrorHandler from '../ErrorHandler';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst classes = theme => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n});\r\n\r\nconst fire = new Firebase();\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    doLoginWithEmailAndPassword(e) {\r\n        e.preventDefault();\r\n        if (this.state.email !== '' || this.state.password !== '') {\r\n            fire.doSignInWithEmailAndPassword(this.state.email, this.state.password).then(() => {\r\n                this.props.history.push('/dashboard')\r\n            }).catch(err => new ErrorHandler(err.message))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <HomeButton />\r\n\r\n                <Container component=\"main\" maxWidth=\"xs\">\r\n                    <CssBaseline />\r\n                    <div className={classes.paper}>\r\n                        <Avatar className={classes.avatar}>\r\n                            <LockOutlinedIcon />\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Log in\r\n                    </Typography>\r\n                        <form className={classes.form} noValidate>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"Email Address\"\r\n                                name=\"email\"\r\n                                autoComplete=\"email\"\r\n                                autoFocus\r\n                                onChange={e => this.setState({ email: e.target.value })}\r\n                            />\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                onChange={e => this.setState({ password: e.target.value })}\r\n                            />\r\n                            <FormControlLabel\r\n                                control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                                label=\"Remember me\"\r\n                            />\r\n                            <Button\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.submit}\r\n                                onClick={e => this.doLoginWithEmailAndPassword(e)}\r\n                            >\r\n                                Log in\r\n                        </Button>\r\n                            <Grid container>\r\n                                <Grid item xs>\r\n                                    <Link href=\"/forgotpassword\" variant=\"body2\">\r\n                                        {\"Forgot password?\"}\r\n                                    </Link>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Link href=\"/signup\" variant=\"body2\">\r\n                                        {\"Don't have an account? Sign Up\"}\r\n                                    </Link>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </form>\r\n\r\n                        <OtherAuth />\r\n                    </div>\r\n                </Container>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(withStyles(classes)(Login));","import { createContext } from 'react';\r\nexport const UserContext = createContext(null)","import React from 'react';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst style = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        'justify-content': 'center',\r\n        'align-items': 'center',\r\n        width: '100%',\r\n        height: '100%',\r\n        position: 'absolute',\r\n    },\r\n}))\r\n\r\n\r\nexport default function CircularIndeterminate() {\r\n    const classes = style();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CircularProgress size={72} color=\"primary\" />\r\n        </div>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { Grid } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport 'date-fns';\r\nimport { format, getDate } from 'date-fns'\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Firebase from '../../Firebase'\r\n\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardTimePicker,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nconst styles = (theme) => ({\r\n    addPayDisplay: {\r\n        width: '50%',\r\n        height: '50%',\r\n    },\r\n    payDisplayItem: {\r\n        width: '50%',\r\n        height: '50%',\r\n        '& Button': {\r\n            color: 'white',\r\n            width: '75%',\r\n        },\r\n    },\r\n    redBg: {\r\n        'background-color': 'red',\r\n        '&:hover': {\r\n            'background-color': 'red',\r\n            opacity: '0.7',\r\n        }\r\n    },\r\n    greenBg: {\r\n        'background-color': 'green',\r\n        '&:hover': {\r\n            'background-color': 'green',\r\n            opacity: '0.7',\r\n        }\r\n    },\r\n    dialogItem: {\r\n        margin: '5px'\r\n    }\r\n})\r\n\r\nclass Frontpage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dialogs: [false, false, false, false],\r\n            selectedDate: format(Date.now(), 'yyyy-MM-dd'),\r\n            amount: null,\r\n            title: null,\r\n        }\r\n    }\r\n\r\n    handleDialogClose = () => {\r\n        let tempArr = [false, false, false, false]\r\n        this.setState({ dialogs: tempArr })\r\n    }\r\n\r\n    handleDialogOpen = (index) => {\r\n        let tempArr = [false, false, false, false]\r\n        tempArr[index] = true\r\n        this.setState({ dialogs: tempArr, selectedDate: format(Date.now(), 'yyyy-MM-dd') })\r\n    }\r\n\r\n    handleDateChange = (e) => {\r\n        let dateToSave = format(e, 'yyyy-MM-dd')\r\n        this.setState({ selectedDate: dateToSave })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ [e.currentTarget.id]: e.currentTarget.value })\r\n    }\r\n\r\n    customDialog = (open, title, type, negOrPos) => {\r\n        let { selectedDate } = this.state\r\n        const { classes } = this.props\r\n\r\n        const inputProps = {\r\n            min: 1,\r\n        };\r\n\r\n        const handleSave = (e) => {\r\n            e.preventDefault();\r\n            let { title, amount } = this.state\r\n            amount = Number(amount)\r\n            if (negOrPos === 'negative') {\r\n                amount = amount - (amount * 2)\r\n            }\r\n            let data = {\r\n                title: title,\r\n                amount: amount,\r\n                date: selectedDate\r\n            }\r\n            new Firebase().postPayment(type, data)\r\n        }\r\n\r\n        return (\r\n            <Dialog\r\n                open={open}\r\n                onClose={this.handleDialogClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <form onSubmit={handleSave}>\r\n                    <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\r\n                    <DialogContent>\r\n                        <Grid\r\n                            container\r\n                            direction=\"column\"\r\n                            justify=\"center\"\r\n                            alignItems=\"center\"\r\n                        ><TextField id=\"title\" onChange={this.handleChange} label=\"Title\" variant=\"outlined\" className={classes.dialogItem} required />\r\n                            <TextField id=\"amount\" onChange={this.handleChange} type=\"number\" label=\"Amount\" variant=\"outlined\" className={classes.dialogItem} inputProps={inputProps} required />\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <Grid container justify=\"space-around\" className={classes.dialogItem}>\r\n                                    <KeyboardDatePicker\r\n                                        disableToolbar\r\n                                        variant=\"inline\"\r\n                                        format=\"dd/MM/yyyy\"\r\n                                        margin=\"normal\"\r\n                                        id=\"date-picker-inline\"\r\n                                        label=\"Pick date\"\r\n                                        value={selectedDate}\r\n                                        onChange={this.handleDateChange}\r\n                                        inputVariant=\"outlined\"\r\n                                        required\r\n                                        KeyboardButtonProps={{\r\n                                            'aria-label': 'change date',\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            </MuiPickersUtilsProvider></Grid>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleDialogClose}>\r\n                            Cancel\r\n                </Button>\r\n                        <Button type=\"submit\" autoFocus>\r\n                            Save\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props\r\n        const { dialogs } = this.state\r\n        return (\r\n            <>\r\n                <Grid container justify-content=\"space-evenly\" className={classes.addPayDisplay}>\r\n                    <Grid container direction=\"row\">\r\n                        <Grid alignItems=\"center\" justify=\"center\" className={classes.payDisplayItem} container><Button onClick={() => this.handleDialogOpen(0)} variant=\"contained\" className={classes.redBg}>Add payment</Button></Grid>\r\n                        <Grid alignItems=\"center\" justify=\"center\" className={classes.payDisplayItem} container><Button onClick={() => this.handleDialogOpen(1)} variant=\"contained\" className={classes.redBg}>Add subscription</Button></Grid>\r\n                        <Grid alignItems=\"center\" justify=\"center\" className={classes.payDisplayItem} container><Button onClick={() => this.handleDialogOpen(2)} variant=\"contained\" className={classes.greenBg}>Add received payment</Button></Grid>\r\n                        <Grid alignItems=\"center\" justify=\"center\" className={classes.payDisplayItem} container><Button onClick={() => this.handleDialogOpen(3)} variant=\"contained\" classes={{ root: classes.greenBg }}>Add salary</Button></Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                {this.customDialog(dialogs[0], 'Add payment', 'payments', 'negative')}\r\n                {this.customDialog(dialogs[1], 'Add subscription', 'subscriptions', 'negative')}\r\n                {this.customDialog(dialogs[2], 'Add received payment', 'payments', 'positive')}\r\n                {this.customDialog(dialogs[3], 'Add salary', 'subscriptions', 'positive')}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Frontpage)\r\n","const now = new Date()\r\n\r\nexport default [\r\n  {\r\n    id: 2,\r\n    title: 'Point in Time Event',\r\n    start: now,\r\n    end: now\r\n  }\r\n]","import React from 'react'\r\nimport { Calendar, momentLocalizer, Views } from 'react-big-calendar'\r\nimport events from '../../utils/events'\r\nimport * as dates from '../../utils/dates'\r\nimport './Calendar.scss'\r\nimport moment from 'moment'\r\nimport Firebase from '../../Firebase'\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.css\";\r\nimport ErrorHandler from '../../ErrorHandler'\r\n\r\nconst now = new Date()\r\n\r\nclass BigCalendar extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            events: [\r\n\r\n            ]\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const fire = new Firebase();\r\n\r\n        fire.getCalendarData()\r\n            .then((data) => {\r\n                let calendarData = []\r\n                for (let i = 0; i < data.length; i++) {\r\n                    const dataObj = {\r\n                        title: data[i].title,\r\n                        start: new Date(data[i].date),\r\n                        end: new Date(data[i].date),\r\n                        amount: data[i].amount\r\n                    }\r\n                    calendarData.push(dataObj)\r\n                }\r\n                this.setState({\r\n                    events: calendarData\r\n                })\r\n\r\n            }).catch(err => new ErrorHandler(err.message))\r\n    }\r\n\r\n    render() {\r\n        const local = momentLocalizer(moment)\r\n        return (\r\n            <div>\r\n                <Calendar\r\n                    localizer={local}\r\n                    events={this.state.events}\r\n                    startAccessor=\"start\"\r\n                    endAccessor=\"end\"\r\n                    style={{\r\n                        height: 750\r\n                    }} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BigCalendar\r\n","import React from 'react'\r\nexport const ConfigContext = React.createContext(null)\r\n","import React from 'react';\r\nimport { withStyles, Icon, Typography, TextField, Button, Dialog, DialogTitle, DialogContent, DialogActions, MenuItem, CircularProgress } from '@material-ui/core';\r\nimport Firebase from '../../Firebase';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { ConfigContext } from '../../ConfigContext';\r\nimport 'react-image-crop/lib/ReactCrop.scss'\r\nimport ReactCrop from 'react-image-crop';\r\nimport ErrorHandler from '../../ErrorHandler';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst classes = (theme) => ({\r\n    root: {\r\n        display: 'grid',\r\n        'grid-template-columns': 'repeat(2, 1fr)',\r\n        'grid-template-rows': '1fr',\r\n        'grid-column-gap': '20px',\r\n        'grid-row-gap': '20px',\r\n        padding: '100px 100px',\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    box: {\r\n        float: 'left',\r\n        backgroundColor: '#fff',\r\n        'box-shadow': '5px 2px 25px -1px rgba(0,0,0,0.25)',\r\n        padding: '25px'\r\n    },\r\n    side: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    height: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    infoPanel: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    rightPanel: {\r\n        display: 'grid',\r\n        'grid-template-columns': '1fr',\r\n        'grid-template-rows': 'repeat(2, 1fr)',\r\n        'grid-column-gap': '20px',\r\n        'grid-row-gap': '20px'\r\n    },\r\n    accountCircle: {\r\n        fontSize: '12.5em',\r\n        marginBottom: '10px',\r\n        color: '#333'\r\n    },\r\n    changerWrapper: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        margin: '15px 0',\r\n    },\r\n    changeIcon: {\r\n        marginLeft: '10px',\r\n        cursor: 'pointer'\r\n    },\r\n    changeButton: {\r\n        minWidth: 0,\r\n        padding: '6px',\r\n        margin: '0 10px'\r\n    },\r\n    redButton: {\r\n        backgroundColor: '#ff0000',\r\n        color: '#fff',\r\n\r\n        '&:hover': {\r\n            backgroundColor: '#dd0000',\r\n            color: '#fff'\r\n        }\r\n    },\r\n    pieChart: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flexDirection: 'column'\r\n    },\r\n    pieChartText: {\r\n        marginBottom: '25px'\r\n    },\r\n    avatarWrapper: {\r\n        position: 'relative',\r\n        maxWidth: '256px',\r\n        maxHeight: '256px',\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    avatar: {\r\n        width: '100%',\r\n        borderRadius: '50%'\r\n    },\r\n    avatarEditButton: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        width: '100%',\r\n        height: '100%',\r\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n        color: '#f1f1f1',\r\n        borderRadius: '50%',\r\n        cursor: 'pointer',\r\n        transition: '3s all'\r\n    },\r\n    avatarEditButtonIcon: {\r\n        fontSize: '4em'\r\n    },\r\n    croppedImagePreview: {\r\n        borderRadius: '50%'\r\n    },\r\n    none: {\r\n        display: 'none'\r\n    },\r\n    selectAvatarLabel: {\r\n        display: 'inline-flex',\r\n        cursor: 'pointer',\r\n        padding: '6px 16px',\r\n        'font-size': '0.875rem',\r\n        'min-width': '64px',\r\n        'box-sizing': 'border-box',\r\n        backgroundColor: '#2196f3',\r\n        color: '#fff',\r\n        transition: 'background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\r\n        'font-family': '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n        'font-weight': 500,\r\n        'line-height': 1.75,\r\n        'border-radius': '4px',\r\n        'letter-spacing': '0.02857em',\r\n        'text-transform': 'uppercase',\r\n        margin: '0 auto',\r\n        marginBottom: '10px'\r\n    },\r\n    avatarDialogContent: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flexDirection: 'column'\r\n    },\r\n    redBg: {\r\n        backgroundColor: theme.palette.error.main,\r\n\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.error.dark\r\n        }\r\n    },\r\n    settingsText: {\r\n        textAlign: 'center',\r\n        marginBottom: '25px'\r\n    },\r\n    w100: {\r\n        width: '100%',\r\n        margin: '10px 0'\r\n    },\r\n    settingsPanel: {\r\n        padding: '25px 75px'\r\n    },\r\n    changingPfpSpinnerWrapper: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        position: 'absolute',\r\n        backgroundColor: 'rgba(0, 0, 0, .5)',\r\n        top: 0,\r\n        width: '100%',\r\n        height: '100%',\r\n        zIndex: 99\r\n    },\r\n    changingPfpSpinner: {\r\n        width: '100%',\r\n        height: '100%',\r\n        zIndex: 99,\r\n    }\r\n});\r\n\r\nconst fire = new Firebase();\r\n\r\nclass Profile extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            changingPfp: false,\r\n            showChangeUsername: false,\r\n            showAvatarEditButton: false,\r\n            showChangeAvatarModal: false,\r\n            username: '',\r\n            file: null,\r\n            src: null,\r\n            currency: 'USD',\r\n            currencies: [\r\n                {\r\n                    value: 'USD',\r\n                    label: '$',\r\n                },\r\n                {\r\n                    value: 'EUR',\r\n                    label: '€',\r\n                },\r\n                {\r\n                    value: 'BTC',\r\n                    label: '฿',\r\n                },\r\n                {\r\n                    value: 'JPY',\r\n                    label: '¥',\r\n                },\r\n            ],\r\n            dateFormat: 'dd/MM/yyyy',\r\n            dateFormats: [\"dd/MM/yyyy\", \"MM/dd/yyyy\"],\r\n            crop: {\r\n                unit: '%',\r\n                width: 30,\r\n                aspect: 1 / 1,\r\n                minWidth: 10,\r\n                minHeight: 10\r\n            },\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ username: fire.auth.currentUser.displayName });\r\n    }\r\n\r\n    changeDisplayName = (e) => {\r\n        e.preventDefault();\r\n\r\n        fire.auth.currentUser.updateProfile({\r\n            displayName: this.state.username\r\n        });\r\n\r\n        this.setState({ showChangeUsername: false });\r\n    }\r\n\r\n    changeAvatar = () => {\r\n        this.setState({ showChangeAvatarModal: true });\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ showChangeAvatarModal: false });\r\n    }\r\n\r\n    onSelectFile = e => {\r\n        if (e.target.files && e.target.files.length > 0) {\r\n            const reader = new FileReader();\r\n            reader.addEventListener('load', () =>\r\n                this.setState({ src: reader.result })\r\n            );\r\n            reader.readAsDataURL(e.target.files[0]);\r\n        }\r\n    };\r\n\r\n    onImageLoaded = image => {\r\n        this.imageRef = image;\r\n    };\r\n\r\n    onCropComplete = crop => {\r\n        this.makeClientCrop(crop);\r\n    };\r\n\r\n    onCropChange = (crop, percentCrop) => {\r\n        this.setState({ crop });\r\n    };\r\n\r\n    async makeClientCrop(crop) {\r\n        if (this.imageRef && crop.width && crop.height) {\r\n            const croppedImageUrl = await this.getCroppedImg(\r\n                this.imageRef,\r\n                crop,\r\n                this.createRandomString(25)\r\n            );\r\n            this.setState({ croppedImageUrl });\r\n        }\r\n    }\r\n\r\n    createRandomString(length) {\r\n        let result = '';\r\n        let characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        let charactersLength = characters.length;\r\n        for (let i = 0; i < length; i++) {\r\n            result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    getCroppedImg(image, crop, fileName) {\r\n        const canvas = document.createElement('canvas');\r\n        const scaleX = image.naturalWidth / image.width;\r\n        const scaleY = image.naturalHeight / image.height;\r\n        canvas.width = crop.width;\r\n        canvas.height = crop.height;\r\n        const ctx = canvas.getContext('2d');\r\n\r\n        ctx.drawImage(image, crop.x * scaleX, crop.y * scaleY, crop.width * scaleX, crop.height * scaleY, 0, 0, crop.width, crop.height);\r\n\r\n        return new Promise((resolve, reject) => {\r\n            canvas.toBlob(blob => {\r\n                if (!blob) {\r\n                    new ErrorHandler('Canvas is empty');\r\n                    return;\r\n                }\r\n                this.setState({ file: blob });\r\n                blob.name = fileName;\r\n                window.URL.revokeObjectURL(this.fileUrl);\r\n                this.fileUrl = window.URL.createObjectURL(blob);\r\n                resolve(this.fileUrl);\r\n            }, 'image/jpeg');\r\n        });\r\n    }\r\n\r\n    saveAvatarChanges = async () => {\r\n        this.setState({ changingPfp: true })\r\n\r\n        await fire.doRemoveLastUsedProfilePicutre().catch(err => new ErrorHandler(err))\r\n\r\n        await fire.doUploadProfilePicture(this.state.file).then(imageURL => {\r\n            fire.auth.currentUser.updateProfile({\r\n                photoURL: imageURL\r\n            }).then(() => {\r\n                this.setState({ file: null, src: null, width: 30, changingPfp: false });\r\n                toast.success('Changed profile picture')\r\n                this.handleClose();\r\n            }).catch(err => new ErrorHandler(err.message));\r\n        }).catch(err => new ErrorHandler(err.message));\r\n    }\r\n\r\n    handleCurrencyChange = (value, context) => {\r\n        this.setState({ currency: value });\r\n        context.changeCurrency(value);\r\n\r\n        fire.doChangeSettingsForUser('currency', value);\r\n    }\r\n\r\n    handleDateFormatChange = (value, context) => {\r\n        this.setState({ dateFormat: value });\r\n        context.changeDateFormat(value);\r\n\r\n        fire.doChangeSettingsForUser('date', value);\r\n    }\r\n\r\n    render() {\r\n        const { username, crop, src } = this.state;\r\n        const { classes } = this.props;\r\n        const data = {\r\n            labels: [\"hello\", \"yes\", \"no\", \"dsajkld\", \"dkl\", \"jdalk\"],\r\n            datasets: [{\r\n                data: [12, 19, 3, 5, 2, 3],\r\n                backgroundColor: [\r\n                    'rgba(255, 99, 132, 0.2)',\r\n                    'rgba(54, 162, 235, 0.2)',\r\n                    'rgba(255, 206, 86, 0.2)',\r\n                    'rgba(75, 192, 192, 0.2)',\r\n                    'rgba(153, 102, 255, 0.2)',\r\n                    'rgba(255, 159, 64, 0.2)'\r\n                ],\r\n                borderColor: [\r\n                    'rgba(255, 99, 132, 1)',\r\n                    'rgba(54, 162, 235, 1)',\r\n                    'rgba(255, 206, 86, 1)',\r\n                    'rgba(75, 192, 192, 1)',\r\n                    'rgba(153, 102, 255, 1)',\r\n                    'rgba(255, 159, 64, 1)'\r\n                ],\r\n                borderWidth: 0.5\r\n            }]\r\n        }\r\n\r\n        const options = {\r\n            legend: {\r\n                position: 'right'\r\n            }\r\n        }\r\n\r\n        return (\r\n            <ConfigContext.Consumer>\r\n                {context => (\r\n                    <>\r\n                        {this.state.showChangeAvatarModal ? (\r\n                            <Dialog\r\n                                open={this.state.showChangeAvatarModal}\r\n                                onClose={this.handleClose}\r\n                                aria-labelledby=\"alert-dialog-title\"\r\n                                aria-describedby=\"alert-dialog-description\"\r\n                            >\r\n                                <DialogTitle id=\"alert-dialog-title\">{\"Change profile picture\"}</DialogTitle>\r\n                                <DialogContent className={classes.avatarDialogContent}>\r\n                                    <label className={classes.selectAvatarLabel} htmlFor=\"select-avatar-input\">Select image</label>\r\n                                    <input onChange={this.onSelectFile} className={classes.none} id=\"select-avatar-input\" type=\"file\" accept=\"image/*\"></input>\r\n                                    {src && (\r\n                                        <ReactCrop\r\n                                            src={src}\r\n                                            crop={crop}\r\n                                            circularCrop={true}\r\n                                            onImageLoaded={this.onImageLoaded}\r\n                                            onComplete={this.onCropComplete}\r\n                                            onChange={this.onCropChange}\r\n                                        >\r\n                                            {this.state.changingPfp ? (\r\n                                                <div className={classes.changingPfpSpinnerWrapper}>\r\n                                                    <CircularProgress size={64} thickness={4} className={classes.changingPfpSpinner} />\r\n                                                </div>\r\n                                            ) : <></>}\r\n                                        </ReactCrop>\r\n                                    )}\r\n                                </DialogContent>\r\n                                <DialogActions>\r\n                                    <Button onClick={this.handleClose} className={classes.redBg} color=\"primary\" variant=\"contained\">Cancel</Button>\r\n                                    <Button onClick={this.saveAvatarChanges} color=\"primary\" variant=\"contained\">save</Button>\r\n                                </DialogActions>\r\n                            </Dialog>\r\n                        ) : (<></>)}\r\n\r\n                        <div className={`${classes.root} profile-page`}>\r\n                            <div className={classes.infoPanel}>\r\n                                <div className={`${classes.box} ${classes.height}`}>\r\n                                    <div className={classes.avatarWrapper}>\r\n                                        <img onMouseEnter={() => this.setState({ showAvatarEditButton: true })} onMouseLeave={() => this.setState({ showAvatarEditButton: false })} className={classes.avatar} src={fire.auth.currentUser.photoURL} alt=\"Avatar\" />\r\n                                        {this.state.showAvatarEditButton ? (\r\n                                            <div onClick={this.changeAvatar} onMouseEnter={() => this.setState({ showAvatarEditButton: true })} onMouseLeave={() => this.setState({ showAvatarEditButton: false })} className={classes.avatarEditButton}>\r\n                                                <Icon className={classes.avatarEditButtonIcon}>add_a_photo</Icon>\r\n                                            </div>\r\n                                        ) : (\r\n                                                <></>\r\n                                            )}\r\n                                    </div>\r\n                                    <div className={classes.changerWrapper}>\r\n                                        {this.state.showChangeUsername ? (\r\n                                            <>\r\n                                                <form onSubmit={(e) => this.changeDisplayName(e)}>\r\n                                                    <Button className={`${classes.changeButton} ${classes.redButton}`} variant=\"contained\" onClick={() => this.setState({ showChangeUsername: false })}><Icon>clear</Icon></Button>\r\n                                                    <TextField defaultValue={fire.auth.currentUser.displayName} onChange={(e) => this.setState({ username: e.target.value })} />\r\n                                                    <Button className={classes.changeButton} color=\"primary\" variant=\"contained\" onClick={this.changeDisplayName}><Icon>done</Icon></Button>\r\n                                                </form>\r\n                                            </>\r\n                                        ) : (\r\n                                                <>\r\n                                                    <Typography variant=\"h5\">{username}</Typography>\r\n                                                    <Icon onClick={() => this.setState({ showChangeUsername: true })} className={classes.changeIcon}>create</Icon>\r\n                                                </>\r\n                                            )}\r\n                                    </div>\r\n                                    <Typography variant=\"h5\">{fire.auth.currentUser.email}</Typography>\r\n                                </div>\r\n                            </div>\r\n                            <div className={`${classes.infoPanel} ${classes.rightPanel} profile-right-info-panel`}>\r\n                                <div className={`${classes.box} ${classes.side} ${classes.settingsPanel}`}>\r\n                                    <Typography className={classes.settingsText} variant=\"h5\">Settings</Typography>\r\n                                    {this.state.currencies ? (\r\n                                        <TextField\r\n                                            id=\"currency-field\"\r\n                                            select\r\n                                            value={context.config.currency}\r\n                                            onChange={(e) => this.handleCurrencyChange(e.target.value, context)}\r\n                                            variant=\"outlined\"\r\n                                            label=\"Select your currency\"\r\n                                            className={classes.w100}\r\n                                        >\r\n                                            {this.state.currencies.map((option, i) => (\r\n                                                <MenuItem key={option.value} value={option.value} >\r\n                                                    {option.value}, { option.label}\r\n                                                </MenuItem>\r\n                                            ))}\r\n                                        </TextField>\r\n                                    ) : <></>}\r\n                                    {this.state.dateFormats ? (\r\n                                        <TextField\r\n                                            id=\"date-format-field\"\r\n                                            select\r\n                                            value={context.config.dateFormat}\r\n                                            onChange={(e) => this.handleDateFormatChange(e.target.value, context)}\r\n                                            variant=\"outlined\"\r\n                                            label=\"Select your prefferd date format\"\r\n                                            className={classes.w100}\r\n                                        >\r\n                                            {this.state.dateFormats.map((option, i) => (\r\n                                                <MenuItem key={option} value={option} >\r\n                                                    {option}\r\n                                                </MenuItem>\r\n                                            ))}\r\n                                        </TextField>\r\n                                    ) : <></>}\r\n                                </div>\r\n                                <div className={`${classes.box} ${classes.side} ${classes.pieChart}`}>\r\n                                    <Typography className={classes.pieChartText} variant=\"h5\">Text</Typography>\r\n                                    <Pie className={classes.chart} data={data} options={options} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </ConfigContext.Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(classes)(Profile);","import React from 'react';\r\nimport {\r\n    BrowserRouter,\r\n    Route,\r\n    Switch,\r\n    Link,\r\n    withRouter,\r\n    NavLink,\r\n    Redirect\r\n} from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport { UserContext } from '../UserContext';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Loader from '../components/Loader'\r\nimport Frontpage from './dasboard_pages/Frontpage';\r\nimport Calendar from './dasboard_pages/Calendar';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport Firebase from '../Firebase';\r\nimport Profile from './dasboard_pages/Profile';\r\nimport { ConfigContext } from '../ConfigContext';\r\n\r\n// Icons\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport ErrorHandler from '../ErrorHandler';\r\n\r\nlet url = window.location.href\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        display: 'flex'\r\n    },\r\n    dashboard: {\r\n        'font-family': 'Roboto',\r\n        display: 'flex',\r\n        'flex-direction': 'row',\r\n    },\r\n    sidebar: {\r\n        maxWidth: '350px',\r\n        width: '100%',\r\n        height: '100vh',\r\n        'box-shadow': '5px 2px 25px -1px rgba(0,0,0,0.1)'\r\n    },\r\n    namedisplay: {\r\n        display: 'flex',\r\n        'justify-content': 'center',\r\n        'text-align': 'center',\r\n        'padding-top': '3vh',\r\n        'padding-bottom': '3vh',\r\n        'flex-direction': 'column'\r\n    },\r\n    namedropdown: {\r\n        display: 'flex',\r\n        'align-items': 'center',\r\n        margin: '0 auto',\r\n        cursor: 'pointer',\r\n        // height: '10px',\r\n    },\r\n    navtabs: {\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        height: 224\r\n    },\r\n    tab: {\r\n        transition: '.25s',\r\n        borderColor: 'rgb(33, 150, 243)',\r\n\r\n        '&:hover': {\r\n            'background-color': 'rgba(33, 150, 243, .15)',\r\n            color: '#000'\r\n        }\r\n    },\r\n    'selected': {\r\n        'background-color': 'rgba(33, 150, 243, .15)',\r\n        'border-right': '6px solid rgb(33, 150, 243)',\r\n        border: 'none',\r\n        color: 'rgb(33, 150, 243)'\r\n    },\r\n    none: {\r\n        display: 'none'\r\n    },\r\n    menuLink: {\r\n        textDecoration: 'none',\r\n        color: '#000'\r\n    },\r\n    content: {\r\n        width: '100%'\r\n    },\r\n    selectCurrency: {\r\n        margin: '20px auto',\r\n        padding: '0 50px',\r\n        bottom: '0',\r\n        position: 'absolute'\r\n    },\r\n    menuItem: {\r\n        display: 'flex',\r\n        'justify-content': 'space-between',\r\n        textDecoration: 'none',\r\n        color: '#000',\r\n        width: '100%',\r\n    },\r\n    nameDropdownList: {\r\n        width: '200px',\r\n    }\r\n})\r\n\r\nconst fire = new Firebase()\r\n\r\nexport class Dashboard extends React.Component {\r\n    static contextType = UserContext\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tabIndex: 0,\r\n            anchorEl: null,\r\n            config: {\r\n                currency: 'EUR',\r\n                dateFormat: 'dd/MM/yyyy'\r\n            }\r\n        }\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        fire.database.ref(`${fire.auth.currentUser.uid}/settings`).once('value').then(snapshot => {\r\n            const data = snapshot.val()\r\n\r\n            if (data) {\r\n                const configObj = {\r\n                    currency: data.currency,\r\n                    dateFormat: data.dateFormat\r\n                }\r\n                this.setState({ config: configObj })\r\n            }\r\n        })\r\n    }\r\n\r\n    handleDropdown = (e) => {\r\n        this.setState({ anchorEl: e.currentTarget })\r\n    }\r\n\r\n    handleClickAway = () => {\r\n        this.setState({ anchorEl: null })\r\n    }\r\n\r\n    handleTabChange = (event, value) => {\r\n        this.setState({ tabIndex: value })\r\n    }\r\n\r\n    logout = () => {\r\n        new Firebase()\r\n            .doSignOut()\r\n            .then(() => this.props.history.push('/'))\r\n            .catch(err => new ErrorHandler(err.message))\r\n    }\r\n\r\n    render() {\r\n        let user = this.context\r\n        const { tabIndex, anchorEl, config } = this.state\r\n        const { classes } = this.props;\r\n\r\n        if (user) {\r\n\r\n            return (\r\n                <ConfigContext.Provider value={{\r\n                    config: config,\r\n                    changeCurrency: (currency) => {\r\n                        const configObj = {\r\n                            currency: currency,\r\n                            dateFormat: this.state.config.dateFormat\r\n                        }\r\n                        this.setState({ config: configObj });\r\n                    },\r\n                    changeDateFormat: (format) => {\r\n                        const configObj = {\r\n                            currency: this.state.config.currency,\r\n                            dateFormat: format\r\n                        }\r\n                        this.setState({ config: configObj });\r\n                    }\r\n                }}>\r\n                    <Grid className={classes.dashboard} container>\r\n                        <BrowserRouter>\r\n                            <Grid className={classes.sidebar} item xs={3}>\r\n                                <div className={classes.namedisplay}>\r\n                                    <div className={classes.namedropdown} onClick={(e) => this.handleDropdown(e)}>\r\n                                        <span>{user.displayName}</span>\r\n                                        <ArrowDropDownIcon />\r\n                                    </div>\r\n                                    <Popper\r\n                                        open={Boolean(anchorEl)}\r\n                                        anchororigin={{\r\n                                            vertical: 'bottom'\r\n                                        }}\r\n                                        anchorEl={anchorEl}>\r\n                                        <Paper>\r\n                                            <ClickAwayListener onClickAway={this.handleClickAway}>\r\n                                                <MenuList id=\"menu-list-grow\" className={classes.nameDropdownList}>\r\n                                                    <MenuItem onClick={() => this.props.history.push('/')}><NavLink className={classes.menuItem} to=\"/\">Home <HomeIcon /></NavLink></MenuItem>\r\n                                                    <MenuItem><Link className={classes.menuItem} to=\"/dashboard/profile\">Profile <SettingsIcon /></Link></MenuItem>\r\n                                                    <MenuItem onClick={this.logout} className={classes.menuItem}>Log out <ExitToAppIcon /></MenuItem>\r\n                                                </MenuList>\r\n                                            </ClickAwayListener>\r\n                                        </Paper>\r\n                                    </Popper>\r\n\r\n                                </div>\r\n                                <Tabs\r\n                                    value={tabIndex}\r\n                                    onChange={this.handleTabChange}\r\n                                    orientation=\"vertical\"\r\n                                    variant='fullWidth'\r\n                                    className={classes.navtabs}\r\n                                    classes={{\r\n                                        indicator: classes.none\r\n                                    }}>\r\n                                    <Tab\r\n                                        className={classes.tab}\r\n                                        classes={{\r\n                                            selected: classes.selected\r\n                                        }}\r\n                                        label=\"Frontpage\"\r\n                                        component={Link}\r\n                                        to=\"/dashboard/frontpage\" />\r\n                                    <Tab\r\n                                        label=\"calendar\"\r\n                                        className={classes.tab}\r\n                                        classes={{\r\n                                            selected: classes.selected\r\n                                        }}\r\n                                        component={Link}\r\n                                        to=\"/dashboard/calendar\" />\r\n                                </Tabs>\r\n                            </Grid>\r\n                            <Grid className={classes.content} item xs={9}>\r\n                                <Switch>\r\n                                    <Route exact path=\"/dashboard\">\r\n                                        <Redirect to=\"/dashboard/frontpage\" />\r\n                                    </Route>\r\n                                    <Route path=\"/dashboard/frontpage\" component={Frontpage} />\r\n                                    <Route path=\"/dashboard/calendar\" component={Calendar} />\r\n                                    <Route path=\"/dashboard/profile\" component={Profile} />\r\n                                </Switch>\r\n                            </Grid>\r\n                        </BrowserRouter>\r\n                    </Grid >\r\n                </ConfigContext.Provider>\r\n            )\r\n        } else {\r\n            return (<Loader />)\r\n        }\r\n    }\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(Dashboard));","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport OtherAuth from '../components/OtherAuth';\r\nimport Firebase from '../Firebase';\r\nimport ErrorHandler from '../ErrorHandler';\r\nimport { withRouter } from 'react-router-dom';\r\nimport HomeButton from '../components/HomeButton';\r\n\r\nconst classes = (theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.primary.main\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    }\r\n});\r\n\r\nclass SignUp extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: '',\r\n            email: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    async createAccount(e) {\r\n        e.preventDefault()\r\n        const fire = new Firebase();\r\n\r\n        if (this.state.username === '' || this.state.email === '' || this.state.password === '') {\r\n            new ErrorHandler('Please fill in the fields.');\r\n        } else {\r\n            await fire.doCreateUserWithEmailAndPassword(this.state.username, this.state.email, this.state.password);\r\n            this.props.history.push('/dashboard');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props\r\n\r\n        return (\r\n            <>\r\n                <HomeButton />\r\n\r\n                <Container component=\"main\" maxWidth=\"xs\">\r\n                    <CssBaseline />\r\n                    <div className={classes.paper}>\r\n                        <Avatar className={classes.avatar}>\r\n                            <LockOutlinedIcon />\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Sign up\r\n                    </Typography>\r\n                        <form className={classes.form} noValidate>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        variant=\"outlined\"\r\n                                        required\r\n                                        fullWidth\r\n                                        id=\"username\"\r\n                                        label=\"Username\"\r\n                                        name=\"username\"\r\n                                        autoComplete=\"username\"\r\n                                        onChange={e => this.setState({ username: e.target.value })}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        variant=\"outlined\"\r\n                                        required\r\n                                        fullWidth\r\n                                        id=\"email\"\r\n                                        label=\"Email Address\"\r\n                                        name=\"email\"\r\n                                        autoComplete=\"email\"\r\n                                        onChange={e => this.setState({ email: e.target.value })}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        variant=\"outlined\"\r\n                                        required\r\n                                        fullWidth\r\n                                        name=\"password\"\r\n                                        label=\"Password\"\r\n                                        type=\"password\"\r\n                                        id=\"password\"\r\n                                        autoComplete=\"current-password\"\r\n                                        onChange={e => this.setState({ password: e.target.value })}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Button\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.submit}\r\n                                onClick={e => this.createAccount(e)}>\r\n                                Sign Up\r\n                        </Button>\r\n                            <Grid container justify=\"flex-end\">\r\n                                <Grid item>\r\n                                    <Link href=\"/login\" variant=\"body2\">\r\n                                        Already have an account? Sign in\r\n                                </Link>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </form>\r\n\r\n                        <OtherAuth />\r\n                    </div>\r\n                </Container>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(withStyles(classes)(SignUp));\r\n","import React from \"react\";\r\nimport { TextField, Container, TableCell, withStyles, Button, Typography } from '@material-ui/core';\r\nimport { Redirect, withRouter, Route } from \"react-router-dom\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Firebase from '../Firebase';\r\n\r\nconst classes = (theme) => ({\r\n    form: {\r\n        margin: theme.spacing(20, 0),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    input: {\r\n        margin: theme.spacing(5, 0)\r\n    }\r\n})\r\n\r\nclass ForgotPassword extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: ''\r\n        }\r\n    }\r\n\r\n    async forgotPassword(e) {\r\n        e.preventDefault()\r\n        const fire = new Firebase()\r\n\r\n        await fire.doForgetPassword(this.state.email)\r\n    }\r\n\r\n    render() {\r\n\r\n        const { classes } = this.props\r\n        return (\r\n            <>\r\n\r\n                <Container className={classes.container} component=\"main\" maxWidth=\"xs\">\r\n                    <div className={classes.form}>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Forgot Password?\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.input}\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Email Address\"\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            autoFocus\r\n                            onChange={e => this.setState({\r\n                                email: e.target.value\r\n                            })} />\r\n\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            onClick={e => this.forgotPassword(e)}\r\n                        >\r\n                            Send\r\n                        </Button>\r\n                    </div>\r\n                </Container>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(withStyles(classes)(ForgotPassword))\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './Navbar.scss';\r\nimport Firebase from '../Firebase';\r\nimport ErrorHandler from '../ErrorHandler';\r\n\r\nconst classes = (theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.primary.main\r\n    },\r\n    navlink: {\r\n        color: '#fff',\r\n        'text-decoration': 'none',\r\n        marginRight: 50\r\n    },\r\n    title: {\r\n        fontSize: 20\r\n    },\r\n    navbarLinks: {\r\n        flexGrow: 1,\r\n        justifyContent: 'space-evenly'\r\n    },\r\n    navbarLink: {\r\n        margin: 'auto 10px'\r\n    },\r\n    rightLink: {\r\n        margin: 'auto 10px'\r\n    }\r\n});\r\n\r\nclass Navbar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            user: null\r\n        };\r\n\r\n        window.addEventListener('scroll', () => {\r\n            const navbarWrapperElement = document.querySelector('.navbar-wrapper');\r\n\r\n            if (window.scrollY > 150) {\r\n                navbarWrapperElement.style.height = '64px';\r\n                navbarWrapperElement.classList.add('navbar-active');\r\n            } else {\r\n                navbarWrapperElement.style.height = '128px';\r\n                navbarWrapperElement.classList.remove('navbar-active');\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.authListener();\r\n    }\r\n\r\n    doLogout() {\r\n        new Firebase().doSignOut().catch(err => new ErrorHandler(err.message));\r\n    }\r\n\r\n    authListener = () => {\r\n        const firebase = new Firebase().firebase\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            if (user) {\r\n                this.setState({ user: user });\r\n            } else {\r\n                this.setState({ user: null });\r\n            }\r\n        });\r\n    }\r\n\r\n    scrollTo(element) {\r\n        const el = document.getElementById(element);\r\n        el.scrollIntoView({ behavior: 'smooth', block: 'nearest' });\r\n    }\r\n\r\n    render() {\r\n        const { user } = this.state;\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div className={`navbar-wrapper ${classes.root}`}>\r\n                <AppBar className=\"navbar navbar-transparent\" position=\"static\">\r\n                    <Toolbar>\r\n                        <NavLink to=\"/\" className={classes.navlink}>\r\n                            <Typography variant=\"overline\" className={classes.title}>Budget planner</Typography>\r\n                        </NavLink>\r\n                        <div className={classes.navbarLinks}>\r\n                            <Button onClick={() => this.scrollTo('about')} className={classes.navbarLink} color=\"inherit\">About</Button>\r\n                            <Button onClick={() => this.scrollTo('works')} className={classes.navbarLink} color=\"inherit\">How it works</Button>\r\n                            <Button onClick={() => this.scrollTo('contact')} className={classes.navbarLink} color=\"inherit\">Contact us</Button>\r\n                        </div>\r\n                        {user ? (\r\n                            <>\r\n                                <Button className={classes.rightLink} href=\"/dashboard\" variant=\"outlined\" color=\"inherit\">Dashboard</Button>\r\n                                <Button className={classes.rightLink} onClick={this.doLogout} variant=\"outlined\" color=\"inherit\">Logout</Button>\r\n                            </>\r\n                        ) : (\r\n                                <>\r\n                                    <Button className={classes.rightLink} href=\"/signup\" variant=\"outlined\" color=\"inherit\">Sign up</Button>\r\n                                    <Button className={classes.rightLink} href=\"/login\" variant=\"outlined\" color=\"inherit\">Login</Button>\r\n                                </>\r\n                            )\r\n                        }\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(classes)(Navbar);","import React from 'react';\r\nimport './Homepage.scss';\r\nimport Navbar from '../components/Navbar';\r\nimport { Typography, Button, TextField, withStyles, Icon } from '@material-ui/core';\r\n\r\nconst classes = (theme) => ({\r\n    submitButton: {\r\n        width: '100%',\r\n        marginTop: 10\r\n    }\r\n});\r\n\r\nclass Homepage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <Navbar />\r\n                <div className=\"section\">\r\n                    <div className=\"skewed\"></div>\r\n                    <div className=\"home-header\">\r\n                        <Typography variant=\"h3\">Our mission is to make you SAVE big money</Typography>\r\n                        <Typography variant=\"subtitle1\">Made from poor student(s) from ukraine</Typography>\r\n                        <div className=\"home-header-buttons\">\r\n                            <Button href=\"/dashboard\" variant=\"contained\">dashboard</Button>\r\n                            <Button variant=\"outlined\" color=\"inherit\">Donate</Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"about-section page-section\" id=\"about\">\r\n                    <Typography variant=\"h4\">About</Typography>\r\n                    <Typography variant=\"body1\">Budget Planner is made for you to see how much money you could save. Basically you just enter a sum how much you make in a month and enter how much you approximately spend in a month.</Typography>\r\n                </div>\r\n\r\n                <div className=\"how-it-works-section\" id=\"works\">\r\n\r\n                </div>\r\n\r\n                <div className=\"footer-section\" id=\"footer\">\r\n                    <div className=\"footer-first\">\r\n                        <div className=\"footer-info\">\r\n                            <Typography variant=\"h4\">Get in touch</Typography>\r\n                            <Typography variant=\"body1\">lol get rekt iot we take your moni from bank account and use on reddit gold because we want karma and hamburger.</Typography>\r\n                            <div className=\"info\">\r\n                                <aside className=\"wrapper\"><Icon>email</Icon><p className=\"inf\">@gmail.com</p></aside>\r\n                                <aside className=\"wrapper\"><Icon>location_on</Icon><p className=\"inf\">Jeppis, Finland</p></aside>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"footer-contact\">\r\n                            <div className=\"contact-section\" id=\"contact\">\r\n                                <form className=\"contact-form\">\r\n                                    <Typography variant=\"h4\">Contact us</Typography>\r\n                                    <div className=\"contact-form-input-wrapper\">\r\n                                        <TextField label=\"Name\" required variant=\"outlined\" />\r\n                                    </div>\r\n                                    <div className=\"contact-form-input-wrapper\">\r\n                                        <TextField label=\"Email\" required variant=\"outlined\" />\r\n                                    </div>\r\n                                    <div className=\"contact-form-input-wrapper\">\r\n                                        <TextField multiline rows={4} rowsMax={6} label=\"Message\" required variant=\"outlined\" />\r\n                                    </div>\r\n                                    <Button className={classes.submitButton} size=\"large\" variant=\"contained\" color=\"secondary\">Submit</Button>\r\n                                </form>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"original-footer\">\r\n                        <div className=\"infos\">\r\n                            <div className=\"footer-info\">\r\n                                <Typography variant=\"h4\">Budget PLANNER</Typography>\r\n                                <Typography variant=\"body1\">LOREM IPSUM</Typography>\r\n                            </div>\r\n                            <div className=\"footer-about\">\r\n                                <Typography variant=\"h4\">About us</Typography>\r\n                                <Typography variant=\"body1\">We are a budget planner website</Typography>\r\n                            </div>\r\n                            <div className=\"social-medias\">\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"sections\">\r\n                            <Button className=\"section\">HOME</Button>\r\n                            <Button className=\"section\">ABOUT</Button>\r\n                            <Button className=\"section\">HOW IT WORKS</Button>\r\n                            <Button className=\"section\">CONTACT</Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(classes)(Homepage);","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Redirect, Switch, useLocation } from 'react-router-dom';\r\n\r\n// Pages\r\nimport Login from './pages/Login';\r\nimport Dashboard from './pages/Dashboard';\r\nimport SignUp from './pages/Signup';\r\nimport ForgotPassword from './pages/ForgotPassword';\r\nimport Firebase from './Firebase';\r\nimport Homepage from './pages/Homepage';\r\nimport { UserContext } from './UserContext'\r\nimport { Typography, Button } from '@material-ui/core';\r\nimport Loader from './components/Loader'\r\n\r\nexport default class App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: null,\r\n            readyToRender: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.authListener()\r\n    }\r\n\r\n    authListener = () => {\r\n        const firebase = new Firebase().firebase;\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            if (user) {\r\n                this.setState({ user: user });\r\n            } else {\r\n                this.setState({ user: null });\r\n            }\r\n            this.setState({ readyToRender: true })\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { user, readyToRender } = this.state;\r\n        const PrivateRoute = ({ children, ...rest }) => {\r\n            return (\r\n                <Route\r\n                    {...rest}\r\n                    render={({ location }) =>\r\n                        user ? (\r\n                            children\r\n                        ) : (\r\n                                <Redirect\r\n                                    to={{\r\n                                        pathname: \"/login\",\r\n                                        state: { from: location }\r\n                                    }}\r\n                                />\r\n                            )\r\n                    }\r\n                />\r\n            );\r\n        }\r\n        if (readyToRender) {\r\n            console.log(user);\r\n            if (user) {\r\n                return (\r\n                    <Router>\r\n                        <UserContext.Provider value={user}>\r\n                            <Switch>\r\n                                <PrivateRoute path=\"/dashboard\"><Dashboard /></PrivateRoute>\r\n                                <Route exact path=\"/login\" component={Login} />\r\n                                <Route exact path=\"/signup\" component={SignUp} />\r\n                                <Route exact path=\"/forgotpassword\" component={ForgotPassword} />\r\n                                <Route exact path=\"/\" component={Homepage} />\r\n                                <Route exact path=\"*\" component={NoMatch} />\r\n                            </Switch>\r\n                        </UserContext.Provider>\r\n                    </Router>\r\n                )\r\n            } else {\r\n                return (\r\n                    <Router>\r\n                        <UserContext.Provider value={user}>\r\n                            <Switch>\r\n                                <Route exact path=\"/dashboard\"><Redirect to=\"/login\" /></Route>\r\n                                <Route exact path=\"/login\" component={Login} />\r\n                                <Route exact path=\"/signup\" component={SignUp} />\r\n                                <Route exact path=\"/forgotpassword\" component={ForgotPassword} />\r\n                                <Route exact path=\"/\" component={Homepage} />\r\n                                <Route exact path=\"*\" component={NoMatch} />\r\n                            </Switch>\r\n                        </UserContext.Provider>\r\n                    </Router>\r\n                );\r\n            }\r\n        } else {\r\n            return (<Loader />)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nfunction NoMatch() {\r\n    let location = useLocation();\r\n\r\n    return (\r\n        <div className=\"no-match-wrapper\">\r\n            <Typography variant=\"h1\">404</Typography>\r\n\r\n            <Typography variant=\"h3\">\r\n                No match for <code>{location.pathname}</code>\r\n            </Typography>\r\n\r\n            <Button href=\"/\" size=\"large\" color=\"primary\" variant=\"contained\">home</Button>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport App from './App';\r\nimport './css/style.scss';\r\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core';\r\nimport { blue, orange, deepPurple } from '@material-ui/core/colors';\r\n\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: blue,\r\n        secondary: deepPurple\r\n    },\r\n    status: {\r\n        danger: orange\r\n    }\r\n});\r\n\r\nrender((\r\n    <ThemeProvider theme={theme}>\r\n        <App />\r\n        <ToastContainer closeOnClick />\r\n    </ThemeProvider>\r\n), document.getElementById('root'));\r\n"],"sourceRoot":""}